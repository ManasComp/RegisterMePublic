@using Microsoft.AspNetCore.Mvc.TagHelpers
@model int

<partial name="_ValidationScriptsPartial"/>
<script>
    const elements = document.getElementsByClassName("stepIndicator").length;
    let data = @Model;
    if (elements <= data) {
        data -= 2;
    }

    for (let i = 0; i < data; i++) {
        document.getElementsByClassName("stepIndicator")[i].className += " finish";
    }
    document.getElementsByClassName("stepIndicator")[data].className += " active";

    function transformData(inputData) {
        const result = {};

        for (const item of inputData) {
            const name = item['name'];
            const value = item['value'];

            if (name === 'DateOfBirth') {
                if (value === null || value === undefined || value === "") {
                    let date = new Date();
                    date.setHours(0, 0, 0, 0);
                    result[name] = date.toISOString().slice(0, 19);
                } else {
                    let date = new Date(value);
                    date.setHours(0, 0, 0, 0);
                    result[name] = date.toISOString().slice(0, 19);
                }
            } else if (name === 'Gender') {
                if (value === 'Female') {
                    result[name] = 0;
                } else {
                    result[name] = 1;
                }
            } else if (value === 'true' || value === 'false') {
                result[name] = value === 'true';
            } else if (value === null || value === undefined || value === "") {
                result[name] = value;
            } else if (!isNaN(Number(value))) {
                result[name] = Number(value);
            } else if (name === '__RequestVerificationToken' || name === '__Invariant' || name === "editting") {

            } else {
                result[name] = value;
            }
        }
        return result;
    }


    document.getElementById("myButton").addEventListener("click", function (e) {

        let ip = '@TempData["warning"]';

        if (ip == null || ip === '') {
            return;
        }

        let formData = transformData($("#formToSubmit").serializeArray());

        const emsData = {
            Ems: formData.Ems,
            Breed: formData.Breed,
            Colour: formData.Colour
        };

        function checkPopupBlocker() {
            const newWindow = window.open("", "_blank");
            if (!newWindow || newWindow.closed || typeof newWindow.closed === "undefined") {
                // Pop-up blocked
                return true;
            } else {
                // Pop-up not blocked
                newWindow.close();
                return false;
            }
        }

        if (checkPopupBlocker()) {
            return;
        }
        e.preventDefault();

        ip += "?ems=" + emsData.Ems + "&breed=" + emsData.Breed + "&colour=" + emsData.Colour;
        $.ajax({
            url: ip,
            type: "GET",
            success(data) {
                $("#formToSubmit").submit();
            },
            error(xhr, status, error) {
                Swal.fire({
                    title: 'Jsou data správně?',
                    text: JSON.parse(xhr.responseText),
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Ano, pokračovat',
                    cancelButtonText: 'Zrušit'
                }).then(result => {
                    if (result.isConfirmed) {
                        $("#formToSubmit").submit();
                    }
                });
            }
        });


    });

</script>